name: Push to NuGet

on:
  push:
    branches:
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.101


    # Chakra.Core
    - name: Build Chakra.Core
      run: |
        cd Chakra.Core
        dotnet build --configuration Release

    - name: Package Chakra.Core
      run: |  
        cd Chakra.Core
        dotnet pack -c Release -o out

    - name: Publish Chakra.Core to Nuget
      run: |
        cd Chakra.Core
        dotnet nuget push ./out/$(ls ./out) -s https://api.nuget.org/v3/index.json -k ${API_KEY}
      env:
        API_KEY: ${{ secrets.NUGET_APIKEY }}


    # Chakra.Core.Configurations
    - name: Build Chakra.Core.Configurations
      run: |
        cd Chakra.Core.Configurations
        dotnet build --configuration Release

    - name: Package Chakra.Core.Configurations
      run: |  
        cd Chakra.Core.Configurations
        dotnet pack -c Release -o out

    - name: Publish Chakra.Core.Configurations to Nuget
      run: |
        cd Chakra.Core.Configurations
        dotnet nuget push ./out/$(ls ./out) -s https://api.nuget.org/v3/index.json -k ${API_KEY}
      env:
        API_KEY: ${{ secrets.NUGET_APIKEY }}


    # Chakra.Core.EntityFramework
    - name: Build Chakra.Core.EntityFramework
      run: |
        cd Chakra.Core.EntityFramework
        dotnet build --configuration Release

    - name: Package Chakra.Core.EntityFramework
      run: |  
        cd Chakra.Core.EntityFramework
        dotnet pack -c Release -o out

    - name: Publish Chakra.Core.EntityFramework to Nuget
      run: |
        cd Chakra.Core.EntityFramework
        dotnet nuget push ./out/$(ls ./out) -s https://api.nuget.org/v3/index.json -k ${API_KEY}
      env:
        API_KEY: ${{ secrets.NUGET_APIKEY }}


    # Chakra.Core.Mocks
    - name: Build Chakra.Core.Mocks
      run: |
        cd Chakra.Core.Mocks
        dotnet build --configuration Release

    - name: Package Chakra.Core.Mocks
      run: |  
        cd Chakra.Core.Mocks
        dotnet pack -c Release -o out

    - name: Publish Chakra.Core.Mocks to Nuget
      run: |
        cd Chakra.Core.Mocks
        dotnet nuget push ./out/$(ls ./out) -s https://api.nuget.org/v3/index.json -k ${API_KEY}
      env:
        API_KEY: ${{ secrets.NUGET_APIKEY }}


    # Chakra.Core.MongoDb
    - name: Build Chakra.Core.MongoDb
      run: |
        cd Chakra.Core.MongoDb
        dotnet build --configuration Release

    - name: Package Chakra.Core.MongoDb
      run: |  
        cd Chakra.Core.MongoDb
        dotnet pack -c Release -o out

    - name: Publish Chakra.Core.MongoDb to Nuget
      run: |
        cd Chakra.Core.MongoDb
        dotnet nuget push ./out/$(ls ./out) -s https://api.nuget.org/v3/index.json -k ${API_KEY}
      env:
        API_KEY: ${{ secrets.NUGET_APIKEY }}


    # Chakra.Core.WebApi
    - name: Build Chakra.Core.WebApi
      run: |
        cd Chakra.Core.WebApi
        dotnet build --configuration Release

    - name: Package Chakra.Core.WebApi
      run: |  
        cd Chakra.Core.WebApi
        dotnet pack -c Release -o out

    - name: Publish Chakra.Core.WebApi to Nuget
      run: |
        cd Chakra.Core.WebApi
        dotnet nuget push ./out/$(ls ./out) -s https://api.nuget.org/v3/index.json -k ${API_KEY}
      env:
        API_KEY: ${{ secrets.NUGET_APIKEY }}


    # Chakra.Core.Windows
    - name: Build Chakra.Core.Windows
      run: |
        cd Chakra.Core.Windows
        dotnet build --configuration Release

    - name: Package Chakra.Core.Windows
      run: |  
        cd Chakra.Core.Windows
        dotnet pack -c Release -o out

    - name: Publish Chakra.Core.Windows to Nuget
      run: |
        cd Chakra.Core.Windows
        dotnet nuget push ./out/$(ls ./out) -s https://api.nuget.org/v3/index.json -k ${API_KEY}
      env:
        API_KEY: ${{ secrets.NUGET_APIKEY }}